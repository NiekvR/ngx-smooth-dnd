{"version":3,"file":"ngx-smooth-dnd.js.map","sources":["ng://ngx-smooth-dnd/src/draggable/draggable.component.ts","ng://ngx-smooth-dnd/src/container/container.component.ts","ng://ngx-smooth-dnd/src/ngx-smooth-dnd.module.ts"],"sourcesContent":["import { Component, ViewChild, ElementRef, AfterViewInit } from '@angular/core';\nimport { constants } from 'smooth-dnd';\nconst {\n  wrapperClass,\n  animationClass\n} = constants;\n\nconst constantClasses = {\n  [wrapperClass]: true,\n  [animationClass]: true,\n};\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: 'smooth-dnd-draggable',\n  templateUrl: './draggable.component.html'\n})\nexport class DraggableComponent implements AfterViewInit {\n  @ViewChild('draggableWrapper') wrapper: ElementRef;\n  ngAfterViewInit() {\n    this.wrapper.nativeElement.parentNode.className = constants.wrapperClass;\n  }\n}\n","import { Component, ContentChildren, QueryList, AfterContentInit, ViewChild, ElementRef, AfterViewInit, Input, OnDestroy, OnInit, Output, EventEmitter, NgZone } from '@angular/core';\nimport { DraggableComponent } from '../draggable/draggable.component';\nimport { dropHandlers, smoothDnD, DropResult, ContainerOptions } from 'smooth-dnd';\n\nsmoothDnD.dropHandler = dropHandlers.reactDropHandler().handler;\nsmoothDnD.wrapChild = false;\n\nexport interface DragStartEndInfo {\n  isSource: boolean;\n  payload: any;\n  willAcceptDrop: boolean;\n}\n\n@Component({\n  // tslint:disable-next-line:component-selector\n  selector: \"smooth-dnd-container\",\n  templateUrl: \"./container.component.html\"\n})\nexport class ContainerComponent implements AfterViewInit, OnDestroy {\n  private container: any;\n  @ContentChildren(DraggableComponent)\n  draggables: QueryList<DraggableComponent>;\n  @ViewChild(\"container\") containerElementRef: ElementRef;\n\n  @Input(\"orientation\") orientation;\n  @Input(\"behaviour\") behaviour;\n  @Input(\"groupName\") groupName;\n  @Input(\"lockAxis\") lockAxis;\n  @Input(\"dragHandleSelector\") dragHandleSelector;\n  @Input(\"nonDragAreaSelector\") nonDragAreaSelector;\n  @Input(\"dragBeginDelay\") dragBeginDelay;\n  @Input(\"animationDuration\") animationDuration;\n  @Input(\"autoScrollEnabled\") autoScrollEnabled;\n  @Input(\"dragClass\") dragClass;\n  @Input(\"dropClass\") dropClass;\n  @Input(\"dropPlaceholder\") dropPlaceholder;\n  @Input(\"removeOnDropOut\") removeOnDropOut;\n\n  @Output() dragStart = new EventEmitter<DragStartEndInfo>();\n  @Output() dragEnd = new EventEmitter<DragStartEndInfo>();\n  @Output() drop = new EventEmitter<DropResult>();\n  @Output() dropReady = new EventEmitter<DropResult>();\n  @Input() getChildPayload: (index: number) => {};\n  @Input()\n  shouldAnimateDrop: (\n    sourceContainerOptions: ContainerOptions,\n    payload: any\n  ) => boolean;\n  @Input()\n  shouldAcceptDrop: (\n    sourceContainerOptions: ContainerOptions,\n    payload: any\n  ) => boolean;\n  @Output() dragEnter = new EventEmitter();\n  @Output() dragLeave = new EventEmitter();\n\n  @Input()\n  getGhostParent: () => HTMLElement;\n\n  constructor(private _ngZone: NgZone) { }\n\n  ngAfterViewInit() {\n    this.container = smoothDnD(\n      this.containerElementRef.nativeElement,\n      this.getOptions()\n    );\n  }\n  ngOnDestroy(): void {\n    this.container.dispose();\n  }\n\n  private getOptions(): ContainerOptions {\n    const options: ContainerOptions = {};\n    if (this.orientation) options.orientation = this.orientation;\n    if (this.behaviour) options.behaviour = this.behaviour;\n    if (this.groupName) options.groupName = this.groupName;\n    if (this.lockAxis) options.lockAxis = this.lockAxis;\n    if (this.dragHandleSelector)\n      options.dragHandleSelector = this.dragHandleSelector;\n    if (this.nonDragAreaSelector)\n      options.nonDragAreaSelector = this.nonDragAreaSelector;\n    if (this.dragBeginDelay) options.dragBeginDelay = this.dragBeginDelay;\n    if (this.animationDuration)\n      options.animationDuration = this.animationDuration;\n    if (this.autoScrollEnabled)\n      options.autoScrollEnabled = this.autoScrollEnabled;\n    if (this.dragClass) options.dragClass = this.dragClass;\n    if (this.dropClass) options.dropClass = this.dropClass;\n    if (this.dropPlaceholder) options.dropPlaceholder = this.dropPlaceholder;\n\n    if (this.dragStart)\n      options.onDragStart = (info: DragStartEndInfo) => {\n        this.getNgZone(() => {\n          this.dragStart.emit(info);\n        });\n      };\n\n    if (this.dragEnd)\n      options.onDragEnd = (info: DragStartEndInfo) => {\n        this.getNgZone(() => {\n          this.dragEnd.emit(info);\n        });\n      };\n\n    if (this.drop)\n      options.onDrop = (dropResult: DropResult) => {\n        this.getNgZone(() => {\n          this.drop.emit(dropResult);\n        });\n      };\n\n    if (this.getChildPayload) options.getChildPayload = this.getChildPayload;\n    if (this.shouldAnimateDrop)\n      options.shouldAnimateDrop = this.shouldAnimateDrop;\n    if (this.shouldAcceptDrop) options.shouldAcceptDrop = this.shouldAcceptDrop;\n\n    if (this.dragEnter)\n      options.onDragEnter = () => this.getNgZone(() => this.dragEnter.emit());\n    if (this.dragLeave)\n      options.onDragLeave = () => this.getNgZone(() => this.dragLeave.emit());\n\n    if (this.dropReady)\n      options.onDropReady = (dropResult: DropResult) => {\n        this.getNgZone(() => {\n          this.dropReady.emit(dropResult);\n        });\n      };\n    \n    if (this.getGhostParent) options.getGhostParent = this.getGhostParent;\n\n    return options;\n  }\n\n  private getNgZone(clb) {\n    this._ngZone.run(() => {\n      clb();\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ContainerComponent } from './container/container.component';\nimport { DraggableComponent } from './draggable/draggable.component';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [ContainerComponent, DraggableComponent],\n  exports: [ContainerComponent, DraggableComponent]\n})\nexport class NgxSmoothDnDModule {}\n"],"names":[],"mappings":"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"}
